@import "__mixins";
@import "__variables";
@import "reset";

.container {
  @include container();
}

.grid-row {
  @include row();
}

.col {
  @include col;
}

//Generate classes for breakpoints
@each $breakpoint-name, $points-map in $breakpoints {

  $column-count: if(map-has-key($points-map, "column-count"), map-get($points-map, "column-count"), $grid-column-count);
  $grid-gutter: if(map-has-key($points-map, "grid-gutter"), map-get($points-map, "grid-gutter"), $grid-gutter);

  @for $i from 1 through $column-count {
    .col-#{$breakpoint-name}-#{$i} {
      @if map-has-key($points-map, "max") {
        @media (max-width: map-get($points-map, "max")) {
          @include explicit-col($i, $column-count, $grid-gutter);
        }
      } @else {
        @include explicit-col($i, $column-count, $grid-gutter);
      }
    }
  }

  @for $i from 0 through $column-count {
    .col-margin-#{$breakpoint-name}-#{$i} {
      @if map-has-key($points-map, "max") {
        @media (max-width: map-get($points-map, "max")) {
          margin-left: percentage($i/$column-count);
        }
      } @else {
        margin-left: percentage($i/$column-count);
      }
    }
  }

  .hide-#{$breakpoint-name} {
    @if map-has-key($points-map, "max") and map-has-key($points-map, "min") {
      @media (min-width: map-get($points-map, "min")) and (max-width: map-get($points-map, "max")) {
        display: none;
      }
    } @else if map-has-key($points-map, "max") {
      @media (max-width: map-get($points-map, "max")) {
        display: none;
      }
    } @else if map-has-key($points-map, "min") {
      @media (min-width: map-get($points-map, "min")) {
        display: none;
      }
    }
  }
}

